trigger:
  branches:
    include:
    - master

pr:
  branches:
    include:
    - '*'

variables:
  CONFIGURATION: Release
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

stages:
  - stage: lint
    displayName: Lint
    jobs:
      - job: Linux
        pool:
          vmImage: ubuntu-16.04
        workspace:
          clean: all

        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 3.1.100

          - task: NodeTool@0
            displayName: Install Node
            inputs:
              versionSpec: '10.16.0'

          - task: CacheBeta@0
            inputs:
              key: 'yarn | "$(Agent.OS)" | $(Build.SourcesDirectory)/src/WebTty.UI/Client/yarn.lock'
              path: $(YARN_CACHE_FOLDER)
            displayName: Cache packages

          - script: ./build.sh setup
            displayName: Install dependencies

          - script: ./build.sh lint
            displayName: Lint

          - script: ./build.sh checktypes
            displayName: Check Types

  - stage: test_and_build
    displayName: Test and Build
    jobs:
      - job: Linux
        pool:
          vmImage: ubuntu-16.04

        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 3.1.100

          - task: NodeTool@0
            displayName: Install Node
            inputs:
              versionSpec: '10.16.0'

          - task: CacheBeta@0
            inputs:
              key: |
                yarn
                $(Agent.OS)
                $(Build.SourcesDirectory)/src/WebTty.UI/Client/yarn.lock
              path: $(YARN_CACHE_FOLDER)
            displayName: Cache packages

          - script: ./build.sh setup
            displayName: Install dependencies

          - script: ./build.sh compile
            displayName: Initial build

          - script: ./build.sh test
            displayName: Run Unit Tests

          - task: PublishTestResults@2
            displayName: Publish unit test results
            condition: always()
            inputs:
              testRunTitle: UnitTests
              testResultsFormat: VSTest
              testResultsFiles: artifacts/TestResults/*.trx

          - script: ./build.sh
            displayName: Package

          - publish: artifacts
            artifact: webtty

  - stage: test_e2e
    displayName: Test E2E
    jobs:
      - job: Linux
        pool:
          vmImage: ubuntu-16.04

        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 3.1.100

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: webtty
              path: $(Build.SourcesDirectory)/artifacts

          - script: ./build.sh install
            displayName: Install Tool

      - job: macOS
        pool:
          vmImage: macOS-10.14

        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 3.1.100

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: webtty
              path: $(Build.SourcesDirectory)/artifacts

          - script: ./build.sh install
            displayName: Install Tool

      - job: Windows
        pool:
          vmImage: vs2017-win2016

        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk'
            inputs:
              packageType: sdk
              version: 3.1.100

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: webtty
              path: $(Build.SourcesDirectory)/artifacts

          - powershell: ./build.ps1 install
            displayName: Install Tool
